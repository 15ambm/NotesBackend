{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseURL","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialResponse","catch","error","alert","notesToShow","filter","map","key","console","log","find","n","changedNote","setTimeout","toggleNoteImportance","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"wNAiBeA,EAdF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBAEbC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACI,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCTtCK,EAAU,kCAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCXvCK,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAGP,yBAAKd,UAAU,SACZc,IAKDC,EAAS,WAMb,OAAO,yBAAKC,MALQ,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAGV,6BACA,mEA4FaC,EAxFL,SAACC,GAAW,IAAD,EAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGWF,mBAAS,IAHpB,mBAGZG,EAHY,KAGHC,EAHG,OAIWJ,oBAAS,GAJpB,mBAIZK,EAJY,KAIHC,EAJG,OAKqBN,mBAAS,MAL9B,mBAKZO,EALY,KAKEC,EALF,KAOnBC,qBAAU,WACRC,IAEG1B,MAAK,SAAA2B,GACJT,EAASS,MAEVC,OAAM,SAAAC,GACLC,MAAM,+DAET,IAEH,IA6CMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAEhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAce,QAASe,IACvB,6BACE,4BAAQ3B,QAAS,kBAAM0B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGU,EAAYE,KAAI,SAAA3C,GAAI,OACnB,kBAAC,EAAD,CAAM4C,IAAK5C,EAAKe,GAAIf,KAAMA,EAAMC,iBAAkB,kBApC7B,SAACc,GAC5B8B,QAAQC,IAAI,aAAc/B,GAE1B,IAAMf,EAAO2B,EAAMoB,MAAK,SAAAC,GAAC,OAAIA,EAAEjC,KAAOA,KAChCkC,EAAW,2BAAOjD,GAAP,IAAaG,WAAYH,EAAKG,YAE/CiC,EACUrB,EAAIkC,GACXvC,MAAK,SAAAC,GACJkC,QAAQC,IAAInC,GACZiB,EAASD,EAAMgB,KAAI,SAAA3C,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOW,SAEpD2B,OAAM,SAAAC,GACLL,EAAgB,aAAD,OAAclC,EAAKK,QAAnB,0BACf6C,YAAW,WACThB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAM,GAAC,OAAIjC,IAAOiC,EAAEjC,UAmBsBoC,CAAqBnD,EAAKe,WAGtF,0BAAMqC,SA7DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAASwB,EACT2B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,GAC3B7C,GAAIY,EAAMkC,OAAS,GAGrBzB,EACUmB,GACP7C,MAAK,SAAAC,GACHiB,EAASD,EAAMmC,OAAOnD,IACtBmB,EAAW,SAiDZ,2BAAOiC,MAAOlC,EAASmC,SA7CJ,SAACX,GACxBR,QAAQC,IAAIO,EAAMY,OAAOF,OACzBjC,EAAWuB,EAAMY,OAAOF,UA4CpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MC9ERC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.8b63df04.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  \r\n  const label = note.important ? \"make not important\" : \"make important\"\r\n\r\n  return (\r\n      <li className=\"note\">\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  \r\n\r\nexport default Note","import axios from \"axios\";\r\nconst baseURL = \"http://localhost:3001/api/notes\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update}","import React, { useState, useEffect } from 'react'\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return <div style={footerStyle}>\r\n    <br/>\r\n    <em>Note App, Made by Alex Mason 2020</em>\r\n  </div>\r\n}\r\n\r\nconst App = (props) => {\r\n\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n  \r\n    useEffect(() => {\r\n      noteService\r\n        .getAll()\r\n        .then(initialResponse => {\r\n          setNotes(initialResponse)\r\n        })\r\n        .catch(error => {\r\n          alert(`there has been a problem getting notes from the server`)\r\n        })\r\n    }, [])\r\n\r\n    const addNote = (event) => {\r\n      event.preventDefault()\r\n      const noteObject = {\r\n        content: newNote,\r\n        date: new Date().toISOString(),\r\n        important: Math.random() < 0.5,\r\n        id: notes.length + 1\r\n      }\r\n\r\n      noteService\r\n        .create(noteObject)\r\n        .then(response =>{\r\n           setNotes(notes.concat(response))\r\n           setNewNote('')\r\n          })\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewNote(event.target.value)\r\n    }\r\n    \r\n    const toggleNoteImportance = (id) => {\r\n      console.log(\"toggle id \", id)\r\n      \r\n      const note = notes.find(n => n.id === id)\r\n      const changedNote = {...note, important: !note.important}\r\n\r\n      noteService\r\n        .update(id, changedNote)\r\n        .then(response => {\r\n          console.log(response)\r\n          setNotes(notes.map(note => note.id !== id ? note : response))\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(`The note '${note.content}' was already removed`)\r\n          setTimeout(() =>{\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n          setNotes(notes.filter(n => id !== n.id))\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage}/>\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll ? \"important\" : \"all\"}\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {notesToShow.map(note => \r\n            <Note key={note.id} note={note} toggleImportance={() => toggleNoteImportance(note.id)}/>\r\n            )}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote} onChange={handleNoteChange}/>\r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\nimport './index.css'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\n// axios\n//   .get('http://localhost:3001/notes')\n//   .then(response => {\n//   console.log(response)\n//   })\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n) "],"sourceRoot":""}